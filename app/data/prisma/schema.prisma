// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema


datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}


// Figure out how to add timestamps

model User {
  id  Int   @id @default(autoincrement())
  spotifyId String
  username String
  email String
  password String
  playRecords PlayRecord[]
  playlistUpdates PlaylistUpdate[]
  followsMade Follow[] @relation("MadeBy")
  followsReceived Follow[] @relation("ReceivedBy")
}

model Follow {
  id  Int   @id @default(autoincrement())
  follower User @relation(name: "MadeBy", fields: [followerId], references: [id])
  followerId Int
  followee User @relation(name: "ReceivedBy",fields: [followeeId], references: [id])
  followeeId Int
}

model PlayRecord {
  id  Int   @id @default(autoincrement())
  user User @relation(fields: [userId], references: [id])
  userId Int
  track Track @relation(fields: [trackId], references: [id])
  trackId Int
}

model Track {
  id Int @id @default(autoincrement())
  spotifyId String
  playRecords PlayRecord[]
  trackAdditions TrackAddition[]
  trackRemovals TrackRemoval[]
}

model PlaylistUpdate {
  id  Int   @id @default(autoincrement())
  user User @relation(fields: [userId], references: [id])
  userId Int
  trackAdditions TrackAddition[]
  trackRemovals TrackRemoval[]
}

model TrackAddition {
  id  Int   @id @default(autoincrement())
  track Track @relation(fields: [trackId], references: [id])
  trackId Int
  playlistUpdate PlaylistUpdate @relation(fields: [playlistUpdateId], references: [id])
  playlistUpdateId Int
}

model TrackRemoval {
  id  Int   @id @default(autoincrement())
  track Track @relation(fields: [trackId], references: [id])
  trackId Int
  playlistUpdate PlaylistUpdate @relation(fields: [playlistUpdateId], references: [id])
  playlistUpdateId Int
}
